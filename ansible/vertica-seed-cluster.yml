# Create Standby nodes by Installing Vertica
---
- name: Create Standby nodes by Installing Vertica
  hosts: "{{ hg }}[0]"
  vars_prompt:
   - name: "hg"
     prompt: |
       This playbook will install a new Vertica cluster 
       on a set of prepared nodes. You will need to enter 
       the name of the Host Group with the hosts for the 
       cluster. The first host in the group will run the 
       install script across other specified hosts.
       
       ]==--> Which host group? 
     private: no
   - name: "node_priv"
     prompt: |
       Next, we need a comma-separated list of host 
       private IP addresses (or DNS names) to use for
       the initial set of Vertica cluster nodes. Commas
       between names, no spaces. For example -- 

       vertica-priv-01,vertica-priv-02,vertica-priv-03

       You will be able to add additional nodes later. 
       ]==---> Which private interfaces? 
     private: no
   - name: "vms_prompt"
     prompt: |
       Will your cluster include a number of virtual 
       machines? If yes, enter 'True', otherwise
       enter 'False'.

       ]==---> Virtual Machines? 
     private: no
  vars:
    vertica_cfg: "vertica_install.cfg"
    loc_cfg: "/tmp/{{ vertica_cfg }}"
    host_cfg: "/root/{{ vertica_cfg }}"
    rpm_path: "/tmp/vertica-10.0.0-0.x86_64.RHEL6.rpm"
    ssh_key: "/root/.ssh/vertica-poc"
    vertica_user: "dbadmin"
    vertica_group: "verticadba"
    vertica_lic: "CE"
  gather_facts: yes
  tasks:
    - name: Delete any old temporary config files
      file:
        path: "{{ loc_cfg }}"
        state: absent

    - name: Create the configuration file for the installation
      blockinfile: 
        path: "{{ loc_cfg }}"
        block: |
          accept_eula = True
          license_file = {{ vertica_lic }}
          direct_only = {{ vms_prompt }}
          failure_threshold = FAIL
          hosts = {{ node_priv }}
          ipv4 = False
          ipv6 = False
          record_to = /root/recorded_vertica_install.cfg
          rpm_file_name = {{ rpm_path }}
          ssh_identity = {{ ssh_key }}
          vertica_dba_user = {{ vertica_user }}
          vertica_dba_group = {{ vertica_group }}
        create: yes
        backup: yes
      delegate_to: localhost

    - name: Here is the contents of the configuration file --
      shell:
        cmd: "cat {{ loc_cfg }}"
      delegate_to: localhost
      register: out
    - debug: var=out.stdout_lines

    - pause:
        prompt: |
          Check the above configuration file contents.
          If everything look good, hit Ctrl-C and then
          "C" to continue or "A" to abort.

    - name: Copy the Vertica Console package to hosts
      copy:
        src: "{{ loc_cfg }}"
        dest: "{{ host_cfg }}"
        mode: "0600"
      register: out
    - debug: var=out

    - name: Run the Vertica Install Script 
      shell:
        cmd: "/opt/vertica/sbin/install_vertica --config-file {{ host_cfg }}"
      register: out
    - debug: var=out

