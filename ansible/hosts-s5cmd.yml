# Install s5cmd, access credentials, and test access
---
- name: Install s5cmd, access credentials, and test access
  hosts: "{{ hosts_prompt }}"
  vars_prompt:
     ### Host where playbook about to play
   - name: "hosts_prompt"
     prompt: "Enter the Host or Host group need to run with this Playbook"
     private: no
  vars:
    fb_url: "poc-fb-data-01"
    fb_s3_bucket: "vertica"
    s5cmd_url: "github.com/peak/s5cmd/"
    tf: "test_s5cmd"
  gather_facts: yes
  tasks:
    - name: Create the .aws directory
      file:
        path: ~/.aws
        state: directory
        
    - name: Copy FlashBlade S3 credentials to ~/.aws directory
      copy:
        src: files/aws_credentials
        dest: ~/.aws/credentials
        mode: '0600'

    - name: Install s5cmd via Go
      shell:
        cmd: "go get -u {{ s5cmd_url }}"
      environment:
        PATH: "/usr/local/go/bin:{{ ansible_env.PATH }}"
      register: go_get_result
    - debug: 
        msg: "{{ go_get_result.stdout_lines }}"

    - name: Place copy of s5cmd in /usr/local/bin
      copy:
        src: "~/go/bin/s5cmd"
        dest: "/usr/local/bin/"
        remote_src: yes
        mode: "0755"

    - name: Testing S3 Access -- generate test file
      shell:
        cmd: "dd if=/dev/urandom of=/tmp/{{ tf }} bs=1M count=100"
      register: s5cmd_result
    - debug: 
        msg: "{{ s5cmd_result.stderr_lines }}"

    - name: Testing S3 Access -- copy test file to bucket
      shell:
        cmd: "s5cmd --endpoint-url {{ fb_url }} cp /tmp/{{ tf }} s3://{{ fb_s3_bucket }}/$(hostname)/{{ tf }}"
      register: s5cmd_result
    - debug: 
        msg: "{{ s5cmd_result.stdout_lines }}"

    - name: Testing S3 Access -- list test files
      shell:
        cmd: "~/go/bin/s5cmd --endpoint-url {{ fb_url }} ls -H s3://{{ fb_s3_bucket }}/*"
      register: s5cmd_result
    - debug: 
        msg: "{{ s5cmd_result.stdout_lines }}"

    - name: Testing S3 Access -- remove remote test file
      shell:
        cmd: "s5cmd --endpoint-url {{ fb_url }} rm s3://{{ fb_s3_bucket }}/$(hostname)/{{ tf }}"
      register: s5cmd_result
    - debug: 
        msg: "{{ s5cmd_result.stdout_lines }}"

    - name: Testing S3 Access -- list empty bucket (error message)
      shell:
        cmd: "s5cmd --endpoint-url {{ fb_url }} ls s3://{{ fb_s3_bucket }}/"
      register: s5cmd_result
      ignore_errors: yes
    - debug: 
        msg: "{{ s5cmd_result.stderr_lines }}"

    - name: Clean up local test file
      file:
        path: "/tmp/{{ tf }}"
        state: absent

...

