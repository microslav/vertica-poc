# Create new Vertica database
---
- name: Create new Vertica database
  hosts: "{{ hg }}[0:2]"
  vars_prompt:
   - name: "hg"
     prompt: |
       This playbook will generate an example VMart
       database of about 900GB across three hosts
       in the specified host group, then load the
       data in parallel across those nodes. 

       ]==--> Which host group? 
     private: no
  vars:
    file_cnt: 10
    sto_s_fact: 3333333334
    sto_o_fact: 333333334
    prod_dim: 33334
    stor_dim: 334
    prom_dim: 34
    vend_dim: 334
    cust_dim: 333334
    empl_dim: 3334
    ware_dim: 334
    ship_dim: 3333334
    page_dim: 3334
    call_dim: 33334
    onl_s_fact: 333334
    inv_fact: 333334             
    years: "2003-2016"
    code_dir: "/opt/vertica/examples/VMart_Schema/"
    load_dir: "/mnt/vertica/vmart/"
    run_as: "dbadmin"
    run_cmd: >-
      ./vmart_gen  
      --files {{ file_cnt }} 
      --store_sales_fact {{ sto_s_fact }}
      --store_orders_fact {{ sto_o_fact }} 
      --product_dimension {{ prod_dim }}
      --store_dimension {{ stor_dim }}
      --promotion_dimension {{ prom_dim }}
      --vendor_dimension {{ vend_dim }}
      --customer_dimension {{ cust_dim }}
      --employee_dimension {{ empl_dim }}
      --warehouse_dimension {{ ware_dim }}
      --shipping_dimension {{ ship_dim }}
      --online_page_dimension {{ page_dim }}
      --callcenter_dimension {{ call_dim }}
      --online_sales_fact {{ onl_s_fact }}
      --inventory_fact {{ inv_fact }}
      --gen_load_script 
      --years {{ years }}
      --datadirectory {{ load_dir }}/{{ inventory_hostname_short }}/
      --seed {{ 95603 | random(seed=inventory_hostname) }}

  gather_facts: yes
  tasks:
    - debug: var=run_cmd
    - pause:
        prompt: |
          The above command will be run on the first 3 hosts
          in the supplied host group. If everything look good, 
          hit Ctrl-C and then "C" to continue or "A" to abort.

    - name: Define the VMart database schema in the database
      shell:
        cmd: "vsql -ef vmart_define_schema.sql"
        chdir: "{{ code_dir }}"
      become: yes
      become_user: "{{ run_as }}"
      become_method: su
      run_once: true
      register: out
    - debug: var=out

    - name: Make sure output data destination directories exist
      file:
        path: "{{ load_dir }}/{{ inventory_hostname_short }}"
        state: directory
      become: yes
      become_user: "{{ run_as }}"
      become_method: su
      register: out
    - debug: var=out

    - name: Run the VMart data generator script 
      shell:
        cmd: "{{ run_cmd }}"
        chdir: "{{ code_dir }}"
      become: yes
      become_user: "{{ run_as }}"
      become_method: su
      register: out
    - debug: var=out

    - name: Load the generated data into the database
      shell:
        cmd: "vsql -ef vmart_load_data.sql"
        chdir: "{{ load_dir }}/{{ inventory_hostname_short }}"
      become: yes
      become_user: "{{ run_as }}"
      become_method: su
      register: out
    - debug: var=out

    - name: Query the database with some example queries from 1 host
      shell:
        cmd: "vsql -if vmart_queries.sql | grep 'Time:'"
        chdir: "{{ code_dir }}"
      become: yes
      become_user: "{{ run_as }}"
      become_method: su
      run_once: true
      register: out
    - debug: var=out

    - name: Query the database with some example queries from 3 hosts
      shell:
        cmd: "vsql -if vmart_queries.sql | grep 'Time:'"
        chdir: "{{ code_dir }}"
      become: yes
      become_user: "{{ run_as }}"
      become_method: su
      register: out
    - debug: var=out


